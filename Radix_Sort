# Radix Sort é um algoritmo de ordenação não comparativa que ordena números inteiros (ou strings) processando os dígitos de cada número. 
# Ele funciona em várias passagens, ordenando os números de acordo com cada dígito, começando pelo menos significativo até o mais significativo.
# Vantagens # 
# Complexidade linear em muitos casos: É o número de elementos, é o número de dígitos/caracteres por elemento.
# Não usa comparações diretas entre elementos: Pode ser mais eficiente em contextos específicos.
# Desvantagens #
# Limitado a dados que possam ser decompostos em "dígitos" ou partes fixas: Funciona bem para inteiros, strings de comprimento fixo, mas não é ideal para números com casas decimais variáveis ou objetos complexos.
# Requer memória extra: Usa arrays auxiliares em cada passo (por exemplo, quando Counting Sort é usado como subrotina), o que pode ser custoso em grandes volumes.

lista = [200, 55, 3, 61, 49, 8, 22, 99]

def counting_sort(arr, exp):
    n = len(arr)
    output = [0] * n                            # saída do counting sort
    count = [0] * 10                            # contador de dígitos (0-9)
    for i in range(n):                          # Conta a ocorrência dos dígitos no lugar exp
        index = (arr[i] // exp) % 10
        count[index] += 1
    for i in range(1, 10):                      # Ajusta count[i] para conter a posição real dos dígitos em output
        count[i] += count[i - 1]
    i = n - 1                                   # Constroi o output de forma estável
    while i >= 0:
        index = (arr[i] // exp) % 10
        output[count[index] - 1] = arr[i]
        count[index] -= 1
        i -= 1
    for i in range(n):                          # Copia o output de volta para a lista original
        arr[i] = output[i]
def radix_sort(arr):
    max_valor = max(arr) if arr else 0      # Encontra o valor máximo para saber o número de dígitos
    exp = 1                                     # Aplica counting sort para cada dígito (exp = 1, 10, 100, ...)
    while max_valor // exp > 0:
        counting_sort(arr, exp)
        exp *= 10

radix_sort(lista)
print(lista)
